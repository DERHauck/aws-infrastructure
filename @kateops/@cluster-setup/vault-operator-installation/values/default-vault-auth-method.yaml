
# Configures and deploys the default VaultAuthMethod CR which will be used by resources
# if they do not specify a VaultAuthMethod reference. The name is 'default' and will
# always be installed in the same namespace as the operator.
# NOTE:
# * It is strongly recommended to deploy the vault secrets operator in a secure Vault environment
#   which includes a configuration utilizing TLS and installing Vault into its own restricted namespace.
defaultAuthMethod:
  # toggles the deployment of the VaultAuthMethod CR
  # @type: boolean
  enabled: false

  # Vault namespace for the VaultAuthMethod CR
  # @type: string
  namespace: ""

  # Vault Auth method to be used with the VaultAuthMethod CR
  # @type: string
  method: kubernetes

  # Mount path for the Vault Auth Method.
  # @type: string
  mount: kubernetes

  # Vault Kubernetes auth method specific configuration
  kubernetes:
    # Vault Auth Role to use
    # This is a required field and must be setup in Vault prior to deploying the helm chart
    # if `defaultAuthMethod.enabled=true`
    # @type: string
    role: "admin"

    # Kubernetes ServiceAccount associated with the default Vault Auth Role
    # @type: string
    serviceAccount: vault-auth-kubernetes-backend

    # Token Audience should match the audience of the vault kubernetes auth role.
    # @type: array<string>
    tokenAudiences: []

  # Vault JWT auth method specific configuration
  jwt:
    # Vault Auth Role to use
    # This is a required field and must be setup in Vault prior to deploying the helm chart
    # if using the JWT for the default auth method.
    # @type: string
    role: ""

    # One of the following is required prior to deploying the helm chart
    # - K8s secret that contains the JWT
    # - K8s service account if a service account JWT is used as a Vault JWT auth token and needs generating by VSO

    # Name of Kubernetes Secret that has the Vault JWT auth token.
    # The Kubernetes Secret must contain a key named `jwt` which references the JWT token, and must exist in the namespace
    # of any consuming VaultSecret CR. This is a required field if a JWT token is provided.
    # @type: string
    secretRef: ""

    # Kubernetes ServiceAccount to generate a service account JWT
    # @type: string
    serviceAccount: "default"

    # Token Audience should match the bound_audiences or the `aud` list in bound_claims if applicable
    # of the Vault JWT auth role.
    # @type: array<string>
    tokenAudiences: []

  # AppRole auth method specific configuration
  appRole:
    # AppRole Role's RoleID to use for authenticating to Vault.
    # This is a required field when using appRole and must be setup in Vault prior to deploying the
    # helm chart.
    # @type: string
    roleId: ""
    # Name of Kubernetes Secret that has the AppRole Role's SecretID used to authenticate with Vault.
    # The Kubernetes Secret must contain a key named `id` which references the AppRole Role's
    # SecretID, and must exist in the namespace of any consuming VaultSecret CR.
    # This is a required field when using appRole and must be setup in Vault prior to deploying the
    # helm chart.
    # @type: string
    secretRef: ""

  # AWS auth method specific configuration
  aws:
    # Vault Auth Role to use
    # This is a required field and must be setup in Vault prior to deploying the helm chart
    # if using the AWS for the default auth method.
    # @type: string
    role: ""

    # AWS region to use for signing the authentication request
    # Optional, but most commonly will be the region where the EKS cluster is running
    # @type: string
    region: ""

    # Vault header value to include in the STS signing request
    # @type: string
    headerValue: ""

    # The role session name to use when creating a WebIdentity provider
    # @type: string
    sessionName: ""

    # The STS endpoint to use; if not set will use the default
    # @type: string
    stsEndpoint: ""

    # The IAM endpoint to use; if not set will use the default
    # @type: string
    iamEndpoint: ""

    # The name of a Kubernetes Secret which holds credentials for AWS. Supported keys include
    # `access_key_id`, `secret_access_key`, `session_token`
    # @type: string
    secretRef: ""

    # Name of a Kubernetes service account that is configured with IAM Roles
    # for Service Accounts (IRSA). Should be annotated with "eks.amazonaws.com/role-arn".
    # @type: string
    irsaServiceAccount: ""

  # Params to use when authenticating to Vault
  # params:
  #   param-something1: "foo"
  # @type: map
  params: {}

  # Headers to be included in all Vault requests.
  # headers:
  #   X-vault-something1: "foo"
  # @type: map
  headers: {}
