global:
  # zone: cluster.local (use only if your DNS server doesn't live in the same zone as kubecost)
  prometheus:
    enabled: false # If false, Prometheus will not be installed -- only actively supported on paid Kubecost plans
    fqdn: ${fqdn_prometheus_service} #example address of a prometheus to connect to. Include protocol (http:// or https://) Ignored if enabled: true
    # insecureSkipVerify : false # If true, kubecost will not check the TLS cert of prometheus
    # queryServiceBasicAuthSecretName: dbsecret # kubectl create secret generic dbsecret -n kubecost --from-file=USERNAME --from-file=PASSWORD
    # queryServiceBearerTokenSecretName: mcdbsecret  # kubectl create secret generic mcdbsecret -n kubecost --from-file=TOKEN

  # Durable storage option, product key required
  thanos:
    enabled: false
    # queryService: http://kubecost-thanos-query-frontend-http.kubecost:{{ .Values.thanos.queryFrontend.http.port }} # an address of the thanos query-frontend endpoint, if different from installed thanos
    # queryServiceBasicAuthSecretName: mcdbsecret #  kubectl create secret generic mcdbsecret -n kubecost --from-file=USERNAME --from-file=PASSWORD <---enter basic auth credentials like that
    # queryServiceBearerTokenSecretName mcdbsecret # kubectl create secret generic mcdbsecret -n kubecost --from-file=TOKEN
    # queryOffset: 3h # The offset to apply to all thanos queries in order to achieve syncronization on all cluster block stores

  grafana:
    enabled: false # If false, Grafana will not be installed
    domainName: ${grafana_service} #example grafana domain Ignored if enabled: true
    scheme: "http" # http or https, for the domain name above.
    proxy: true # If true, the kubecost frontend will route to your grafana through its service endpoint
  #    fqdn: cost-analyzer-grafana.default.svc

  notifications:
    # Kubecost alerting configuration
    # Ref: http://docs.kubecost.com/alerts
    # alertConfigs:
    # frontendUrl: http://localhost:9090 # optional, used for linkbacks
    # globalSlackWebhookUrl: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX # optional, used for Slack alerts
    # globalAlertEmails:
    #   - recipient@example.com
    #   - additionalRecipient@example.com
    # Alerts generated by kubecost, about cluster data
    # alerts:
    # Daily namespace budget alert on namespace `kubecost`
    # - type: budget                # supported: budget, recurringUpdate
    #   threshold: 50               # optional, required for budget alerts
    #   window: daily               # or 1d
    #   aggregation: namespace
    #   filter: kubecost
    #   ownerContact:               # optional, overrides globalAlertEmails default
    #     - owner@example.com
    #     - owner2@example.com
    #   # optional, used for alert-specific Slack alerts
    #   slackWebhookUrl: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

    # Daily cluster budget alert on cluster `cluster-one`
    # - type: budget
    #   threshold: 200.8        # optional, required for budget alerts
    #   window: daily           # or 1d
    #   aggregation: cluster
    #   filter: cluster-one     # does not accept csv

    # Recurring weekly update (weeklyUpdate alert)
    # - type: recurringUpdate
    #   window: weekly          # or 7d
    #   aggregation: namespace
    #   filter: '*'

    # Recurring weekly namespace update on kubecost namespace
    # - type: recurringUpdate
    #   window: weekly # or 7d
    #   aggregation: namespace
    #   filter: kubecost

    # Spend Change Alert
    # - type: spendChange         # change relative to moving avg
    #   relativeThreshold: 0.20   # Proportional change relative to baseline. Must be greater than -1 (can be negative)
    #   window: 1d                # accepts ‘d’, ‘h’
    #   baselineWindow: 30d       # previous window, offset by window
    #   aggregation: namespace
    #   filter: kubecost, default # accepts csv

    # Health Score Alert
    # - type: health              # Alerts when health score changes by a threshold
    #   window: 10m
    #   threshold: 5              # Send Alert if health scores changes by 5 or more

    # Kubecost Health Diagnostic
    # - type: diagnostic          # Alerts when kubecost is is unable to compute costs - ie: Prometheus unreachable
    #   window: 10m

    alertmanager: # Supply an alertmanager FQDN to receive notifications from the app.
      enabled: false # If true, allow kubecost to write to your alertmanager
      fqdn: http://cost-analyzer-prometheus-server.default.svc #example fqdn. Ignored if prometheus.enabled: true

    # Set saved report(s) accessible from reports.html
    # Ref: http://docs.kubecost.com/saved-reports
  savedReports:
    enabled: false # If true, overwrites report parameters set through UI
    reports:
      - title: "Example Saved Report 0"
        window: "today"
        aggregateBy: "namespace"
        idle: "separate"
        accumulate: false # daily resolution
        filters:
          - property: "cluster"
            value: "cluster-one,cluster*" # supports wildcard filtering and multiple comma separated values
          - property: "namespace"
            value: "kubecost"
      - title: "Example Saved Report 1"
        window: "month"
        aggregateBy: "controllerKind"
        idle: "share"
        accumulate: false
        filters:
          - property: "label"
            value: "app:cost*,environment:kube*"
          - property: "namespace"
            value: "kubecost"
      - title: "Example Saved Report 2"
        window: "2020-11-11T00:00:00Z,2020-12-09T23:59:59Z"
        aggregateBy: "service"
        idle: "hide"
        accumulate: true # entire window resolution
        filters: [] # if no filters, specify empty array

  # Set saved report(s) accessible from reports.html
  # Ref: http://docs.kubecost.com/saved-reports
  assetReports:
    enabled: false # If true, overwrites report parameters set through UI
    reports:
      - title: "Example Asset Report 0"
        window: "today"
        aggregateBy: "type"
        accumulate: false # daily resolution
        filters:
          - property: "cluster"
            value: "cluster-one"

  podAnnotations: {}
  # iam.amazonaws.com/role: role-arn
  additionalLabels:
    logging: grafana-agent
